# Ref: https://github.com/dongjinleekr/kafka-docker
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  labels:
    app: kafka-headless
spec:
  selector:
    app: kafka
  ports:
  - port: 5555
    name: jmi
  - port: 9092
    targetPort: 9092
    name: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  replicas: 4
  template:
    metadata:
      name: kafka
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: dongjinleekr/kafka:2.13-2.7.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: kafk
        - containerPort: 5555
          name: jmx
        env:
        - name: BROKER_ID_COMMAND
          value: "[[ `hostname` =~ -([0-9]+) ]] && echo ${BASH_REMATCH[1]}"
        - name: HOSTNAME_COMMAND
          value: hostname
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://_{HOSTNAME_COMMAND}.kafka-headless:9092
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zk-cp-zookeeper-0.zk-cp-zookeeper-headless:2181,zk-cp-zookeeper-1.zk-cp-zookeeper-headless:2181,zk-cp-zookeeper-2.zk-cp-zookeeper-headless:2181/kafka
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        volumeMounts:
        - name: kafka-storage
          mountPath: /kafka
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50M
